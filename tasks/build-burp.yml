---

- name: install build dependencies
  package:
    name: "{{ build_dependencies | join(',') }}"
    state: latest

- name: Uninstall old burp
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    - burp
    - burp-client
    - burp-server
    - burp-core

- name: Ensure download directory is present
  file: path={{ download_dir }} state=directory

- name: GET burp backup and restore
  get_url: url={{ burpurl }} dest={{ download_dir }}/{{ burpsrc }}.tar.gz

- name: Unpack Burp source files
  shell: cd {{ download_dir }} && tar -xzvf {{ burpsrc }}.tar.gz creates={{ download_dir }}/{{ burpsrc }}

- name: Autoreconf Burp source files
  shell: cd {{ download_dir }}/{{ burpsrc }} && autoreconf -vif creates={{ download_dir }}/{{ burpsrc }}/configure

- name: ./configure
  shell: cd {{ download_dir }}/{{ burpsrc }} && ./configure --prefix=/usr --sysconfdir=/etc/burp --localstatedir=/var creates={{ download_dir }}/{{ burpsrc }}/Makefile

- name: Make
  shell: cd {{ download_dir }}/{{ burpsrc }} && make creates={{ download_dir }}/{{ burpsrc }}/burp

- name: check if burp is installed
  stat: path=/usr/sbin/burp
  register: stb

- name: Uninstall burp
  shell: cd {{ download_dir }}/{{ burpsrc }} && make uninstall removes=/usr/sbin/burp
  when: stb.stat.exists

- name: Make install
  shell: cd {{ download_dir }}/{{ burpsrc }} && make install creates=/usr/sbin/burp
  notify:
    - restart burp server

- name: copy etc file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "build/CA.cnf.j2", dest: "{{ burp_server_ca_conf }}" }




