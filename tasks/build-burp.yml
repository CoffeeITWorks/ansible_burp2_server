---

- name: ensure chache for apt is updated
  apt:
    update_cache: yes
    cache_valid_time: 43200
  changed_when: false
  when: ansible_os_family == 'Debian'

- name: install build dependencies
  package:
    name: "{{ build_dependencies | join(',') }}"
    state: present

- name: Uninstall old burp
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    - burp
    - burp-client
    - burp-server
    - burp-core

- name: force reinstall burp
  file:
    path: "{{ download_dir }}"
    state: absent
  when: burp_force_reinstall | bool

- name: Ensure download directory is present
  file: path={{ download_dir }} state=directory

- name: GET burp backup and restore
  get_url:
    url: "{{ burpurl }}"
    dest: "{{ download_dir }}/{{ burpsrc }}.{{ burpsrcext }}"
    timeout: 30
    validate_certs: no

- name: Unpack Burp source files tar.gz
  shell: cd {{ download_dir }} && tar -xzvf {{ burpsrc }}.{{ burpsrcext }} creates={{ download_dir }}/{{ burpsrc }}
  register: unpack_src_tar
  when: burpsrcext == 'tar.gz'

- name: Unpack Burp source files zip
  shell: cd {{ download_dir }} && unzip {{ burpsrc }}.{{ burpsrcext }} creates={{ download_dir }}/{{ burpsrc }}
  register: unpack_src_zip
  when: burpsrcext == 'zip'

- name: Autoreconf Burp source files
  shell: cd {{ download_dir }}/{{ burpsrc }} && autoreconf -vif creates={{ download_dir }}/{{ burpsrc }}/configure

- name: ./configure
  shell: cd {{ download_dir }}/{{ burpsrc }} && ./configure --prefix=/usr --sysconfdir=/etc/burp --localstatedir=/var creates={{ download_dir }}/{{ burpsrc }}/Makefile

- name: Make
  shell: cd {{ download_dir }}/{{ burpsrc }} && make creates={{ download_dir }}/{{ burpsrc }}/burp

- name: check if burp is installed
  stat: path=/usr/sbin/burp
  register: stb

- name: Uninstall burp
  shell: cd {{ download_dir }}/{{ burpsrc }} && make uninstall removes=/usr/sbin/burp
  when: stb.stat.exists and ( unpack_src_tar.changed or unpack_src_zip.changed )

- name: Make install
  shell: cd {{ download_dir }}/{{ burpsrc }} && make install creates=/usr/sbin/burp
  notify:
    - restart burp server

- name: read burp installed version
  shell: burp -v
  changed_when: false
  register: cmd_burp_version

- name: failed when burp version is different than the one that must be installed
  fail: msg="burp version is different than the one that must be installed"
  when: cmd_burp_version.stdout != "burp-{{ burp_version }}"

# Ensure to not create /etc/bur/CA manually because it will break auto generated certificate
- name: create etc directories
  file: path={{ item }} recurse=yes state=directory
  with_items:
    - '/etc/burp/autoupgrade'
    - '{{ burp_client_ca_csr_dir }}'
    - '/etc/burp/clientconfdir/incexc'
    - '/etc/burp/clientconfdir/profiles'

- name: copy etc file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "build/CA.cnf.j2", dest: "{{ burp_server_ca_conf }}" }




